# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more

# assign apps
$term = kitty
$editor = code
$file = dolphin
$browser = vivaldi
$spotify = spotify-launcher
$discord = vesktop


 ################################### Applications ###################################
bind = SUPER, RETURN, exec, $term  # open terminal
bind = SUPER, E, exec, $file # open file manager
bind = SUPER, C, exec, $editor # open vscode
bind = SUPER, T, exec, $browser # open browser
bind = SUPER, M, exec, $spotify # open spotify
bind = SUPER, D, exec, $discord # open discord
bind = CTRL+SHIFT, ESCAPE, exec, $scrPath/sysmonlaunch.sh  # open htop/btop if installed or default to top (system monitor)
bind = CTRL+SUPER, Slash, exec, pkill anyrun || anyrun

# App settings and configs
bind = Control+Super, V, exec, pavucontrol
bind = Control+Super+Shift, V, exec, easyeffects

# Actions
# bind = SUPER, PERIOD, exec, pkill -x rofi || ~/.config/rofi/emoji/emoji.sh
bind = Super, Q, killactive,
bind = ALT, F4, exec, $scrPath/dontkillsteam.sh # killactive, kill the window on focus
bind = SUPER, SPACE, togglefloating, # toggle the window on focus to float
bind = SUPER, delete, exit, # kill hyperland session
bind = SUPER, G, togglegroup, # toggle the window on focus to group (tab mode)
bind = SUPER SHIFT, G, centerwindow
bind = SUPER SHIFT, F, exec, $scrPath/windowpin.sh # toggle pin on focused window
bind = SUPER, A, exec, pkill -x rofi || $scrPath/rofilaunch.sh d # launch desktop applications

# ASUS LAPTOP FUNCTION BINDS
bindel = , XF86Calculator, exec, org.gnome.Calculator # Calculator
bindel = , XF86Launch4, exec, asusctl led-mode -n # FN + F4 # Change keyboard aura
bindel = , XF86Sleep, exec, swaylock and systemctl suspend # FN + F11 # Sleep key
bindel = , XF86Launch3, exec, rog-control-center # Launch Rog control center
bindel = , XF86AudioMute, exec, swayosd-client --output-volume mute-toggle # toggle audio mute
bindel = , XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle # toggle microphone mute
bindel = , XF86AudioPlay, exec, playerctl play-pause # play / pause music
bind = , switch:on:Lid Switch, exec, swaylock; sleep 5; systemctl suspend # Trigger when the switch is turning off
bind = , XF86PowerOff, exec, swaylock; sleep 5 && systemctl suspend # Sleep when power button is pressed
bind = ,XF86TouchpadToggle, exec, bash $scrPath/touchpad.sh # FN + F10 Toggle Touchpad

# Wallpaper management
bind = SUPER SHIFT, W, exec, pkill -x rofi || $scrPath/WallpaperSelect.sh # rofi wall select menu
bind = SUPER ALT, right, exec, $scrPath/Wallpaper.sh -n # next wallpaper
bind = SUPER ALT, left, exec, $scrPath/Wallpaper.sh -p # previous wallpaper

# Audio control
bindl  = CTRL, F11, exec, playerctl play-pause # play or pause music
bindl  = CTRL, F12, exec, playerctl next # play next song
bindl  = CTRL, F10, exec, playerctl previous # play previous song

# Exec custom scripts
bind = SUPER SHIFT, A, exec, pkill -x rofi || $scrPath/rofiselect.sh # rofi style select menu
bind = SUPER, V, exec, pkill -x rofi || $scrPath/cliphist.sh c  # open Pasteboard in screen center
bind = SUPER SHIFT, K, exec, $scrPath/keyboardswitch.sh # change keyboard layout

# Rofi is toggled on/off if you repeat the key presses
# bind = SUPER, tab, exec, pkill -x rofi || $scrPath/rofilaunch.sh w # switch between desktop applications
# bind = SUPER, R, exec, pkill -x rofi || $scrPath/rofilaunch.sh f # browse system files
# bind = SUPER, PERIOD, exec, pkill -x rofi || ~/.config/rofi/emoji/emoji.sh

# Screenshot/Screencapture
bind = SUPER, P, exec, $scrPath/screenshot.sh s # drag to snip an area / click on a window to print it
bind = SUPER CTRL, P, exec, $scrPath/screenshot.sh sf # frozen screen, drag to snip an area / click on a window to print it
bind = SUPER ALT, P, exec, $scrPath/screenshot.sh m # print focused monitor
bind = ,print, exec, $scrPath/screenshot.sh p  # print all monitor outputs
bindl= CTRL, Print, exec, mkdir -p ~/Pictures/Screenshots && ~/.config/ags/scripts/grimblast.sh copysave screen ~/Pictures/Screenshots/Screenshot_"$(date '+%Y-%m-%d_%H.%M.%S')".png

# Window/Session actions
bind = SUPER, L, exec, swaylock # lock screen
# bind = SUPER, backspace, exec, $scrPath/logoutlaunch.sh 1 # logout menu


######################### IMAGE TO TEXT CONVERT #########################
bind = Control+Super+Shift,S,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract "tmp.png" - | wl-copy && rm "tmp.png"
bind = Super+Control,T,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract -l eng "tmp.png" - | wl-copy && rm "tmp.png"



######################### AGS BINDS #########################
bindr = SUPER + Control, R, exec, killall ags ydotool; ags &
bindr = Control+Super+Alt, R, exec, hyprctl reload; killall ags ydotool; ags &
bind = SUPER, Slash, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "cheatsheet""$i"; done
bind = Super + Shift, T, exec, ~/.config/ags/scripts/color_generation/switchwall.sh
bind = Control+Alt, Slash, exec, ags run-js 'cycleMode();' # make the bar simple
bind = SUPER, B, exec, ags -t 'sideleft'
bind = SUPER, N, exec, ags -t 'sideright'
bind = SUPER, Comma, exec, ags run-js 'openColorScheme.value = true; Utils.timeout(5000, () => openColorScheme.value = false);'
# bind = SUPER, K, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "osk""$i"; done
 bind = Control+Super, G, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "crosshair""$i"; done
bind = SUPER, backspace, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "session""$i"; done
bind = SUPER Shift,M, exec, ags run-js 'indicator.popup(1);'
bind = SUPER, Tab, exec, ags -t 'overview'
bindir = SUPER, Super_L, exec, ags -t 'overview'


# FUNCTION KEYS
bindel = , XF86MonBrightnessUp, exec, $scrPath/brightnesscontrol.sh i # FN + F8 Brightness control - up
bindel = , XF86MonBrightnessDown, exec, $scrPath/brightnesscontrol.sh d # FN + F7  Brightness control - down
bindle = , XF86AudioRaiseVolume, exec, $scrPath/volumecontrol.sh -o i; ags run-js 'indicator.popup(1);'
bindle = , XF86AudioLowerVolume, exec, $scrPath/volumecontrol.sh -o d; ags run-js 'indicator.popup(1);'


######################### TESTING NOTIFICATION DAEMON ######################
bind = Super+Alt, f12, exec, notify-send 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action" -t 0000
bind = Super+Alt, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind'

# ########################### Keybinds for Hyprland ############################
# Swap windows
bind = Super+Shift, left, movewindow, l
bind = Super+Shift, right, movewindow, r
bind = Super+Shift, up, movewindow, u
bind = Super+Shift, down, movewindow, d
bind = Super+Shift, P, pin

## Move focus with mainMod + arrow keys
bind = SUPER + SHIFT, H, movefocus, l
bind = SUPER + SHIFT, L, movefocus, r
bind = SUPER + SHIFT, K, movefocus, u
bind = SUPER + SHIFT, J, movefocus, d
bind = Super, BracketLeft, movefocus, l
bind = Super, BracketRight, movefocus, r

# Workspace, window, tab switch with keyboard
bind = Control+Super, right, workspace, +1
bind = Control+Super, left, workspace, -1
bind = Super, mouse:275, workspace, -1
bind = Super, mouse:276, workspace, +1
bind = Control+Super, up, workspace, -5
bind = Control+Super, down, workspace, +5
bind = Super, Page_Down, workspace, +1
bind = Super, Page_Up, workspace, -1
bind = Super+Shift, mouse_down, movetoworkspace, -1
bind = Super+Shift, mouse_up, movetoworkspace, +1

# Window split ratio
binde = Super, Minus, splitratio, -0.1
binde = Super, Equal, splitratio, 0.1

# Fullscreen
bind = Super, F, fullscreen, 0
bind = Super + SHIFT, D, fullscreen, 1
bind = Super+Alt, F, fakefullscreen, 0

# Next/previous 10 workspace with Z and X
bind = SUPER, Z, workspace, -10
bind = SUPER, X, workspace, +10

# Scroll through existing workspaces with mainMod + scroll
bind = SUPER, mouse_down, workspace, e+1
bind = SUPER, mouse_up, workspace, e-1

# Switching
bind = Super, 1, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 1
bind = Super, 2, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 2
bind = Super, 3, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 3
bind = Super, 4, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 4
bind = Super, 5, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 5
bind = Super, 6, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 6
bind = Super, 7, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 7
bind = Super, 8, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 8
bind = Super, 9, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 9
bind = Super, 0, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh workspace 10
bind = Alt, Tab, cyclenext
bind = Alt, Tab, bringactivetotop,   # bring it to the top

# Move window to workspace Super + Shift + [0-9]
bind = Super+Shift, 1, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 1
bind = Super+Shift, 2, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 2
bind = Super+Shift, 3, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 3
bind = Super+Shift, 4, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 4
bind = Super+Shift, 5, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 5
bind = Super+Shift, 6, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 6
bind = Super+Shift, 7, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 7
bind = Super+Shift, 8, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 8
bind = Super+Shift, 9, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 9
bind = Super+Shift, 0, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspace 10


# Move window to workspace sliently Super + Alt + [0-9]
bind = Super+Alt, 1, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 1
bind = Super+Alt, 2, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 2
bind = Super+Alt, 3, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 3
bind = Super+Alt, 4, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 4
bind = Super+Alt, 5, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 5
bind = Super+Alt, 6, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 6
bind = Super+Alt, 7, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 7
bind = Super+Alt, 8, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 8
bind = Super+Alt, 9, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 9
bind = Super+Alt, 0, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 10

# Special workspaces (scratchpad)
bind = SUPER ALT, S, movetoworkspacesilent, special
bind = SUPER, S, togglespecialworkspace,

# Move/resize windows with Super + LMB/RMB and dragging
bindm = Super, mouse:272, movewindow
bindm = Super, mouse:273, resizewindow

# Toggle Layout
bind = SUPER CTRL, J, togglesplit, # dwindle

# Arrow keys with IJKL
bindle = Alt, I, exec, ydotool key 103:1 103:0
bindle = Alt, K, exec, ydotool key 108:1 108:0
bindle = Alt, J, exec, ydotool key 105:1 105:0
bindle = Alt, L, exec, ydotool key 106:1 106:0

## SUPMAP FOR RESIZE
# will switch to a submap called resize
bind=ALT,R,submap,resize

# will start a submap called "resize"
submap=resize

# sets repeatable binds for resizing the active window
binde=,right,resizeactive,10 0
binde=,left,resizeactive,-10 0
binde=,up,resizeactive,0 -10
binde=,down,resizeactive,0 10

# use reset to go back to the global submap
bind=,escape,submap,reset 
bind=,catchall,submap,reset

# will reset the submap, which will return to the global submap
submap=reset
